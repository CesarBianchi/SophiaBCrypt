/*
 * Copyright (C) 2018 CesarBianchi
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package sophiabcrypt;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;

/**
 * This class create a new "Input Your Password Window" and start process of encrypt or decrypt
 * @see SbcPswControl
 * @see SbcPlanFile
 * @see SbcEncEngine
 * @see SbcEncryptor
 * @author CesarBianchi
 * @since Sep/2018
 */
public class SbcPswWindow extends javax.swing.JFrame {
    private boolean PswIsOk = false;
    private String cPsw = new String();
    private String cOper = new String();
    private String cPath = new String();
    JFileChooser jFile = null;
    
    /**
     * Creates new form SbcPswWindow
     * @author CesarBianchi
     * @since Sep/2018
    */
    public SbcPswWindow() {
        initComponents();
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @author CesarBianchi
     * @author NetBeans 8.1 IDE
     * @since Sep/2018
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Deseja criptografar o arquivo selecionado ?");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ATENÇÃO: Memorize a sua senha para restauração futura.");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Este arquivo só podera ser restaurado utilizando a mesma senha.");

        jLabel4.setText("Senha:");

        jLabel5.setText("Confirme a senha:");

        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method is used in "Confirm" button on Password Window.
     * It's start password validate process
     * @author CesarBianchi
     * @since Sep/2018
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String cPsw1 = jTextField1.getText().trim();
        String cPsw2 = jTextField2.getText().trim();
        
        SbcPswControl SbcPsw = new SbcPswControl();
        SbcPsw.init(cPsw1, cPsw2,getOper());
        
        if (SbcPsw.IsValidPsw() == true){
            setPwsIsOk(true,cPsw1);
            try {
                ProcessFile(getPath());
            } catch (Exception ex) {
                Logger.getLogger(SbcPswWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.dispose();
        }else{
            setPwsIsOk(false,"");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SbcPswWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SbcPswWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SbcPswWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SbcPswWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SbcPswWindow().setVisible(true);
            }
        });
    }
    
    /**
     * Set the main label of the windown by according the operation. Encrypt or Decrypt
     * It's start password validate process
     * @param cOper The operation (Enc or Dec)
     * @author CesarBianchi
     * @since Sep/2018
    */
    public void setLabels(String cOper){
        if (cOper == "DEC"){
            jLabel1.setText("Deseja descriptografar o arquivo selecionado ?");
            jLabel2.enable(false);
            jLabel2.setVisible(false);
            jLabel3.enable(false);
            jLabel3.setVisible(false);
        }    
    }
    
    /**
     * Get the password is ok
     * @return PswIsOk True if password if ok, False if password isn't ok
     * @author CesarBianchi
     * @since Sep/2018
    */
    public boolean pwsIsOk(){
        return PswIsOk;
    }
    
    /**
     * Get the password 
     * @return cPsw Return the password inputed by user (password 1)
     * @author CesarBianchi
     * @since Sep/2018
    */
    public String getPsw(){
        return cPsw;
    }
    
    /**
     * Set password is ok
     * @param lOk Passowrd status (true if ok, false if isn't ok)
     * @param password The passoword 1 inputed by user
     * @author CesarBianchi
     * @since Sep/2018
    */
    private void setPwsIsOk(boolean lOk, String password){
        PswIsOk = lOk;
        setPws(password);
    }
    
    /**
     * Set password 
     * @param password The passoword 1 inputed by user
     * @author CesarBianchi
     * @since Sep/2018
    */
    private void setPws(String password){
        cPsw = password;
    }
    
    /**
     * Set the operation (ENC or DEC) and labels of window
     * @param cOp The operation type
     * @author CesarBianchi
     * @since Sep/2018
    */
    public void setOper(String cOp){
        cOper = cOp;
        setLabels(cOp);
    }
    
    /**
     * Get the operation (ENC or DEC)
     * @return cOper The operation type
     * @author CesarBianchi
     * @since Sep/2018
    */
    public String getOper(){
        return cOper;
    }
    
    /**
     * Set the main path selected by user on TreeFileObj
     * @param cP The main path
     * @author CesarBianchi
     * @since Sep/2018
    */
    public void setPath(String cP){
        cPath = cP;
    }
    
    /**
     * Get the main path selected by user on TreeFileObj
     * @return cPath The main path
     * @author CesarBianchi
     * @since Sep/2018
    */
    public String getPath(){
        return cPath;
    }       

    /**
     * Init the operation for process files
     * @param cPath The main path for process files
     * @author CesarBianchi
     * @since Sep/2018
    */
    private void ProcessFile(String cPath) throws Exception{
        
        SbcPlanFile PlanFile = new SbcPlanFile();
        PlanFile.init(getOper());
        PlanFile.DiscoveryFiles(cPath);
        String aFiles[] = PlanFile.getFiles();
        
        SbcProgressWindow SbcProgress = new SbcProgressWindow();
        SbcProgress.setQtdFiles(PlanFile.getQtdFiles());
        SbcProgress.setOper(getOper());
        SbcProgress.setFiles(aFiles);
        SbcProgress.setPsw(getPsw());
        SbcProgress.setFileTreeObj(jFile);
        SbcProgress.init(PlanFile.getQtdFiles());
        //jFile.updateUI();
    }
    
    public void setFileTreeObj(JFileChooser jF){
        jFile = jF;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
